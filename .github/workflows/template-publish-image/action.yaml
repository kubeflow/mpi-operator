# Composite action to publish MPI Operator images.
name: Build And Publish Container Images
description: Build Multiplatform Supporting Container Images

inputs:
  image:
    required: true
    description: image tag
  dockerfile:
    required: true
    default: Dockerfile
    description: path for Dockerfile
  platforms:
    required: true
    description: e.g, linux/amd64
  suffix:
    required: false
    description: e.g, -openmpi
  context:
    required: false
    default: .
    description: e.g, build/base
  output-artifact-name:
    required: true
    description: e.g, mpi-operator
  load-artifact-name:
    required: false
    description: e.g, openmpi-builder

runs:
  using: composite
  steps:
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: ${{ inputs.platforms }}

    - name: Set Up Docker Buildx
      uses: docker/setup-buildx-action@v2

#    - name: debug
#      shell: bash
#      run: |
#        docker info -f '{{ .DriverStatus }}'
#        cat /etc/docker/daemon.json | jq '. | .+{"features": {"containerd-snapshotter": true}}' | sudo tee /etc/docker/daemon.json
#        sudo systemctl restart docker
#        docker info -f '{{ .DriverStatus }}'

    - name: Docker meta
      if : ${{ inputs.suffix == '' }}
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.image }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Docker meta with suffix
      if : ${{ inputs.suffix != '' }}
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.image }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          suffix=${{ inputs.suffix }},onlatest=true

    - name: Download artifact
      if: ${{ inputs.load-artifact-name != '' }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.load-artifact-name }}
        path: /tmp

    - name: Load Image
      if: ${{ inputs.load-artifact-name != '' }}
      shell: bash
      run: |
        docker load --input /tmp/${{ inputs.load-artifact-name }}.tar
        docker image ls -a

    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        platforms: ${{ inputs.platforms }}
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=oci,dest=/tmp/${{ inputs.output-artifact-name }}.tar
        build-args:
          port=2222
          BASE_LABEL=${{ env.DOCKER_METADATA_OUTPUT_TAGS }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
          name: ${{ inputs.output-artifact-name }}
          path: /tmp/${{ inputs.output-artifact-name }}.tar
